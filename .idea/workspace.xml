<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d2e4b23c-cdd6-4c78-9784-7189ba357c97" name="Changes" comment="some cleanups">
      <change afterPath="$PROJECT_DIR$/apps/server/.env.example" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/env/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/env/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/env/src/server.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/env/src/web.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/env/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/server/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/server/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/server/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/server/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/server/src/routes/world.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/server/src/routes/world.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/server/src/world/player-spawning.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/server/src/world/player-spawning.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/server/src/world/world-manager.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/server/src/world/world-manager.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/app/world-visualizer/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/app/world-visualizer/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/drizzle.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/drizzle.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/lib/ai/prompts.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/lib/ai/prompts.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/lib/ai/tools/create-player.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/lib/ai/tools/create-player.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/index.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/queries.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/queries.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/schema.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/schema.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/utils.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/dist/utils.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/drizzle.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/database/drizzle.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/mark-migration-applied.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/database/mark-migration-applied.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/packages/database/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/src/queries.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/database/src/queries.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/database/src/schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/database/src/schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pnpm-lock.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/pnpm-lock.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="McpProjectServerCommands">
    <McpServerCommand>
      <option name="enabled" value="true" />
      <option name="name" value="nx-mcp" />
      <option name="programPath" value="npx" />
      <option name="arguments" value="-y nx-mcp@latest /Users/hoqua/Desktop/work/pets/dnd-sur" />
      <option name="workingDirectory" value="" />
      <envs />
    </McpServerCommand>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="30UwlggaLogOzatu8QvJd7QMXXR" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "js.debugger.nextJs.config.created.client": "true",
    "js.debugger.nextJs.config.created.server": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "pnpm",
    "npm.Next.js: server-side.executor": "Run",
    "npm.db:generate.executor": "Run",
    "npm.db:migrate.executor": "Run",
    "npm.db:push.executor": "Run",
    "npm.lint.executor": "Run",
    "ts.external.directory.path": "/Users/hoqua/Desktop/work/pets/dnd-sur/apps/web/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="npm.db:migrate">
    <configuration name="Next.js: debug client-side" type="JavascriptDebugType" uri="http://localhost:3000/">
      <method v="2" />
    </configuration>
    <configuration name="Next.js: server-side" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="db:generate" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="db:generate" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="db:migrate" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="db:migrate" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="db:push" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="db:push" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="lint" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="lint" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.db:migrate" />
        <item itemvalue="npm.db:generate" />
        <item itemvalue="npm.db:push" />
        <item itemvalue="npm.lint" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-WS-251.27812.50" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d2e4b23c-cdd6-4c78-9784-7189ba357c97" name="Changes" comment="" />
      <created>1753695611295</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1753695611295</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="javascript:npm:react" />
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="javascript:npm:tailwindcss" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
    <option featureType="dependencySupport" implementationName="javascript:npm:next" />
    <option featureType="dependencySupport" implementationName="executable:terraform" />
    <option featureType="dependencySupport" implementationName="javascript:npm:postcss" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="to monorepo" />
    <option name="LAST_COMMIT_MESSAGE" value="to monorepo" />
  </component>
</project>